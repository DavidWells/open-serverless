# main only

name: Integrate

on:
  push:
    branches: [disabled]

env:
  SLS_IGNORE_WARNING: '*'
  FORCE_COLOR: 1
  SLS_SCHEMA_CACHE_BASE_DIR: '/home/runner'

jobs:
  linuxNode22:
    name: '[Linux] Node 22: Publish canary, Unit & packaging tests '
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Node.js and npm
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          registry-url: https://registry.npmjs.org

      - name: Publish canary
        # Note: Setting NODE_AUTH_TOKEN as job|workspace wide env var won't work
        #       as it appears actions/setup-node sets own value
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} # 01dd......71cc
        run: |
          ./.github/prepare-canary.js
          npm publish --tag canary
          git checkout .

      - name: Retrieve dependencies from cache
        id: cacheNpm
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: npm-v22-${{ runner.os }}-${{ github.ref }}-${{ hashFiles('package.json') }}
          restore-keys: npm-v22-${{ runner.os }}-${{ github.ref }}-

      - name: Install dependencies
        if: steps.cacheNpm.outputs.cache-hit != 'true'
        run: |
          npm update --no-save
          npm update --save-dev --no-save
      - name: Unit tests (AWS SDK v2)
        # Some tests depend on TTY support, which is missing in GA runner
        # Workaround taken from https://github.com/actions/runner/issues/241#issuecomment-577360161
        run: script -e -c "npm test -- -b"
        env:
          SLS_AWS_SDK_V3: '0'
      - name: Unit tests (AWS SDK v3)
        run: script -e -c "npm test -- -b"
        env:
          SLS_AWS_SDK_V3: '1'
      - name: Packaging tests (AWS SDK v2)
        run: npm run integration-test-run-package
        env:
          SLS_AWS_SDK_V3: '0'
      - name: Packaging tests (AWS SDK v3)
        run: npm run integration-test-run-package
        env:
          SLS_AWS_SDK_V3: '1'

  windowsNode16:
    name: '[Windows] Node 16: Unit tests'
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Retrieve dependencies from cache
        id: cacheNpm
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: npm-v16-${{ runner.os }}-${{ github.ref }}-${{ hashFiles('package.json') }}
          restore-keys: npm-v16-${{ runner.os }}-${{ github.ref }}-

      - name: Install Node.js and npm
        uses: actions/setup-node@v4
        with:
          node-version: 16.x

      - name: Install dependencies
        if: steps.cacheNpm.outputs.cache-hit != 'true'
        run: |
          npm update --no-save
          npm update --save-dev --no-save
      - name: Unit tests
        run: npm test -- -b

  linuxNode16:
    name: '[Linux] Node 16: Isolated unit tests'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Retrieve dependencies from cache
        id: cacheNpm
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: npm-v16-${{ runner.os }}-${{ github.ref }}-${{ hashFiles('package.json') }}
          restore-keys: npm-v16-${{ runner.os }}-${{ github.ref }}-

      - name: Install Node.js and npm
        uses: actions/setup-node@v4
        with:
          node-version: 16.x

      - name: Install dependencies
        if: steps.cacheNpm.outputs.cache-hit != 'true'
        run: |
          npm update --no-save
          npm update --save-dev --no-save
      - name: Unit tests
        # Some tests depend on TTY support, which is missing in GA runner
        # Workaround taken from https://github.com/actions/runner/issues/241#issuecomment-577360161
        run: script -e -c "npm run test:isolated -- -b"

  integrate:
    name: Integrate
    runs-on: ubuntu-latest
    needs: [linuxNode22, windowsNode22, linuxNode16]
    timeout-minutes: 30 # Default is 360
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      SLS_AWS_REQUEST_MAX_RETRIES: 50 #Increase number of retries, due to observed "Rate exceeded" fails
      SERVERLESS_BINARY_PATH: ./dist/serverless-linux
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Ensure to have complete history of commits pushed with given push operation
          # It's loose and imperfect assumption that no more than 30 commits will be pushed at once
          fetch-depth: 30
          # Tag needs to be pushed with real user token, otherwise pushed tag won't trigger the actions workflow
          # Hence we're passing 'serverless-ci' user authentication token
          token: ${{ secrets.USER_GITHUB_TOKEN }}

      - name: Retrieve dependencies from cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: npm-v22-${{ runner.os }}-${{ github.ref }}-${{ hashFiles('package.json') }}

      # Potentially needed for test/integration/curated-plugins-python.test.js
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Node.js and npm
        uses: actions/setup-node@v4
        with:
          node-version: 22.x

      # Note: No need to install dependencies as we have retrieved cached `node_modules` for very
      #       same `package.json` as stored with previous job

      - name: Basic integration tests against standalone binary
        run: npm run integration-test-run-basic
      - name: Full integration tests against standalone binary
        run: npm run integration-test-run-all
